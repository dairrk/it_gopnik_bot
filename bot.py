import asyncio
import re
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
import os
from dotenv import load_dotenv
load_dotenv()

API_TOKEN = os.getenv("API_TOKEN")

TRIGGERS = [
    (re.compile(r'\b–∫[–æ–∞]—Ä–æ—á[—å–µ]?\b', re.IGNORECASE), '–£ –∫–æ–≥–æ –∫–æ—Ä–æ—á–µ, —Ç–æ—Ç –¥–æ–º–∞ —Å–∏–¥–∏—Ç!'),
    (re.compile(r'\b–Ω–µ—Ç\b', re.IGNORECASE), '–ø–∏–¥–æ—Ä–∞ –æ—Ç–≤–µ—Ç'),
    (re.compile(r'\b–¥–∞\b', re.IGNORECASE), '–ø–∏–∑–¥–∞'),
    (re.compile(r'\b—Ö–æ(—á—É|—Ç–∏–º|—Ç—è—Ç|—Ç–µ–ª|—Ç–µ–ª–∞)\b', re.IGNORECASE), '–•–æ—Ç–µ—Ç—å –Ω–µ–≤—Ä–µ–¥–Ω–æ!'),
    (re.compile(r'\b–∫—Å\b', re.IGNORECASE), '–†–∞–±–æ—Ç–∞! –ö–∞–∫–æ–π –ö–°??? üß¢'),
    (re.compile(r'\b—Ç–µ–∑\b', re.IGNORECASE), '–¢–µ–∑? –≠—Ç–æ –≤—ã –ø—Ä–æ –ª—É—á—à–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –º–∏—Ä–µ! üöñ'),
]

async def handle_message(message: Message):
    text = message.text.strip()
    for pattern, response in TRIGGERS:
        if pattern.match(text):
            await message.reply(response)
            break

async def main():
    bot = Bot(
        token=API_TOKEN,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )
    dp = Dispatcher()

    dp.message.register(handle_message)

    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
