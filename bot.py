import asyncio
import re
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
import os
from dotenv import load_dotenv
load_dotenv()

API_TOKEN = os.getenv("API_TOKEN")

TRIGGERS = [
    (re.compile(r'\b–∫[–æ–∞]—Ä–æ—á[—å–µ]?\b', re.IGNORECASE), '–£ –∫–æ–≥–æ –∫–æ—Ä–æ—á–µ, —Ç–æ—Ç –¥–æ–º–∞ —Å–∏–¥–∏—Ç!'),
    (re.compile(r'\b–Ω–µ—Ç\b', re.IGNORECASE), '–ø–∏–¥–æ—Ä–∞ –æ—Ç–≤–µ—Ç'),
    (re.compile(r'\b–¥–∞\b', re.IGNORECASE), '–ø–∏–∑–¥–∞'),
    (re.compile(r'\b—Ö–æ(—á—É|—Ç–∏–º|—Ç—è—Ç|—Ç–µ–ª|—Ç–µ–ª–∞)\b', re.IGNORECASE), '–•–æ—Ç–µ—Ç—å –Ω–µ–≤—Ä–µ–¥–Ω–æ!'),
    (re.compile(r'\b–∫—Å\b', re.IGNORECASE), '–†–∞–±–æ—Ç–∞! –ö–∞–∫–æ–π –ö–°??? üß¢'),
    (re.compile(r'\b—Ç–µ–∑\b', re.IGNORECASE), '–¢–µ–∑? –≠—Ç–æ –≤—ã –ø—Ä–æ –ª—É—á—à–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –º–∏—Ä–µ! üöñ'),
    (re.compile(r'\b–∏—Å–ª–∞–º\b', re.IGNORECASE), '–ò—Å–ª–∞–º ‚Äî –Ω–µ —Ç–æ—Ä–º–æ–∑, –∞ –≥–∞–∑ –≤ –ø–æ–ª! üèéÔ∏è'),
    (re.compile(r'\b–∞—Å—ã–ª–∂–∞–Ω\b', re.IGNORECASE), '–ê—Å—ã–ª–∂–∞–Ω ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–ª–∞–Ω, —ç—Ç–æ —É—Ä–∞–≥–∞–Ω! üå™Ô∏è'),
    (re.compile(r'\b–∞—Ä—Å–ª–∞–Ω\b', re.IGNORECASE), '–ê—Ä—Å–ª–∞–Ω ‚Äî —Ä–∞–∑–Ω–æ—Å–∏—Ç, –∫–∞–∫ —Ç–∞–Ω–∫ –ø–æ –∫–∞—à—Ç–∞–Ω–∞–º! üí•'),
    (re.compile(r'\b–∂–∞–Ω–¥–æ—Å\b', re.IGNORECASE), '–ñ–∞–Ω–¥–æ—Å ‚Äî –±–æ—Å—Å, –∫–∞–∫ –≤ –õ–æ—Å-–°–∞–Ω—Ç–æ—Å! üéÆ'),
    (re.compile(r'\b–¥–∏–º–∞—à\b', re.IGNORECASE), '–î–∏–º–∞—à ‚Äî –∏ –≥–æ–ª–æ—Å, –∏ —Å—Ç–∏–ª—å, –∏ –∫—É—Ä–∞–∂! üé§'),
    (re.compile(r'\b–¥–∞–∏—Ä\b', re.IGNORECASE), '–î–∞–∏—Ä ‚Äî –≤—Å–µ–≥–¥–∞ –≤ —ç—Ñ–∏—Ä, –±–µ–∑ —Ñ–∞–ª—å—à–∏–≤—ã—Ö –≥–∏—Ä—å! üì°'),
    (re.compile(r'\b–∞—Ä–ª–∞–Ω\b', re.IGNORECASE), '–ê—Ä–ª–∞–Ω ‚Äî –Ω–µ —á–µ–ª–æ–≤–µ–∫, –∞ —Ü–µ–ª—ã–π –∫–ª–∞–Ω! üõ°Ô∏è'),
    (re.compile(r'\b–±–µ—Ä–µ–∫–µ—Ç\b', re.IGNORECASE), '–ë–µ—Ä–µ–∫–µ—Ç ‚Äî —É–≥–æ—â–∞–µ—Ç –≤—Å–µ—Ö –±–µ–∑ –±–µ–¥! üçâ'),
    (re.compile(r'\b–¥–æ—Ç–∞\b', re.IGNORECASE), '–î–æ—Ç–∞ ‚Äî –¥–ª—è –≥–µ–µ–≤. üïπÔ∏è –®—É—á—É... –º–æ–∂–µ—Ç.'),
    (re.compile(r'\b—Å—Ç–∞—è\b', re.IGNORECASE), '–°–¢–†–û–ô–°–Ø–Ø–Ø!!! üê∫'),
    (re.compile(r'\b—Ä–µ–≥—Ä–µ—Å—Å\b', re.IGNORECASE), '–†–µ–≥—Ä–µ—Å—Å ‚Äî –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è. üîÅ'),
    (re.compile(r'\b—Ä–µ–ª–∏–∑\b', re.IGNORECASE), '–∑–∏–º–∞ –Ω–µ –±—É–¥–µ—Ç, —Ä–µ–ª–∏–∑ –Ω–µ –±—É–¥–µ—Ç'),
    (re.compile(r'\b—Ñ–ª–∞—Ç—Ç–µ—Ä\b', re.IGNORECASE), '–∫—Ç–æ-—Ç–æ —Å–∫–∞–∑–∞–ª –≥–∞—á–∏?'),
    (re.compile(r'\bflutter\b', re.IGNORECASE), '–∫—Ç–æ-—Ç–æ —Å–∫–∞–∑–∞–ª –≥–∞—á–∏?'),
]

async def handle_message(message: Message):
    text = message.text.strip()
    for pattern, response in TRIGGERS:
        if pattern.search(text):
            await message.reply(response)
            break


async def main():
    bot = Bot(
        token=API_TOKEN,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )
    dp = Dispatcher()

    dp.message.register(handle_message)

    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
